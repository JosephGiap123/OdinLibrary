:root{
	--main-bg-color: #4169e1;
	/* --secondary-bg-color:  */

	--card-bg-color: beige;
	--card-support-color: #e1b941;

	--button-valid-color: #8fbc8f;
	--button-valid-border-color: seagreen;

	--button-invalid-color: lightpink;
	--button-invalid-border-color: rosybrown;

	--font-grey-color: #747474;

	--invalid-input: red;
	--invalid-input-bg: ivory;
}

html, body {
    max-width: 100%;
    overflow-x: hidden;
}

body, h2, h1, p{
	margin: 0;
}

.grid{
	display: grid;
	height: 100vh;
	grid-template-rows:100px 1fr 100px;
	grid-template-areas:
	"header"
	"cont"
	"footer";
}

.header{
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 24px;
	grid-area: header;
	background-color: var(--button-valid-color);
	padding: 0 16px 0 16px;
	color: var(--card-bg-color);
}

.image-library{
	width: 30px;
}

.footer{
	grid-area: footer;
	background-color: rgb(75, 100, 100);
}

.libTitle{
	margin-top: 8px;
	text-align: center;
	justify-self: center;
	grid-area: libTitle;
	padding-left: 26px;
}

.content{
	display: grid;
	grid-template-rows: 35px 1fr 1fr;
	grid-template-columns: 1fr 200px;
	grid-template-areas:
	"libTitle ."
	"books addForm"
	"books sortForm";
	grid-area: cont;
	background-color: lightgray;
	min-height: 0; /*important, stuff breaks without it...*/
}

.cards{
	grid-area: books;
	height: auto;
	display: grid;
	overflow-y: scroll;
	scrollbar-width: none;
	grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
	align-items: start;
	background-color: lightgray;
	gap: 24px;
	padding: 24px;
}

.card{
	max-height: 400px;
	padding: 1em;
	display: grid;
	/* grid-template-rows: 30px 1fr 20px; */
	grid-auto-rows: max-content;
	grid-template-columns: 1fr 100px;
	grid-template-areas: 
	"img img"
	"title title"
	"desc desc"
	"del read";
	gap: 10px;
	border-left: solid var(--card-support-color) 6px;
	box-shadow: 5px 5px 5px rgba(60, 60, 60, 0.3);
	border-radius: 4%;
	background-color: var(--card-bg-color);
	align-items: center;
}

.card > h1{
	display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2; /*look over webkit later */
	text-overflow: ellipsis;
	overflow: hidden;
	grid-area: title;
	font-size: 20px;
	align-self: start;
	border-bottom: solid var(--card-support-color) 2px;
	border-radius: 2px;
	justify-self: center;
	text-align: center;
}

.card > p{
	margin: 0;
	grid-area: desc;
	color: var(--font-grey-color);
}

.card > button{
	grid-area: del;
}

.image{
	grid-area: img;
	max-width: 100%;
	aspect-ratio: 16 / 9;
  background-size: cover;
	background-image: linear-gradient(to bottom, rgba(167, 167, 167, 0) 0%, rgba(167, 167, 167, 0) 59%, rgba(167, 167, 167, 0.65) 100%), url("./images/no-image.jpg");
	border-radius: 1em;
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
}

.delete-book{
	border-radius: 2em;
	background-color: var(--button-valid-color);
	border: solid var(--button-valid-border-color) 2px;
	box-shadow: 1px 1px 1px rgba(60, 60, 60, 0.3);
}

.delete-book:hover{
	cursor: pointer;
	background-color: var(--button-invalid-color);
	border: solid var(--button-invalid-border-color) 2px;
}

.image-test{
	grid-area: read;
	width: 30px;
	align-self: center;
	justify-self: end;
	height: auto;
}

.image-test:hover{
	cursor: pointer;
}

.add-to-lib-box{
	height: auto;
	grid-area: addForm;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: flex-start;
	background-color: var(--card-bg-color);
	padding: 10px;
	border: solid var(--card-support-color) 2px;
	border-radius: 2px;
}

.add-to-lib-box > h2, .sort-lib > h2{
	font-size: 16px;
}

fieldset{
	border: 0;
  padding: 0;
  margin: 0;
  min-width: 0;
}

.form-add-book{
	padding: 0 6px;
}

.add-to-lib-box input{
	display: block;
	max-width: 80%;
}

.sort-lib{
	grid-area: sortForm;
	height: auto;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: flex-start;
	background-color: var(--card-bg-color);
	padding: 10px;
	border: solid var(--card-support-color) 2px;
	border-radius: 2px;
}


.sort-lib input{
	display: block;
}

.checkbox{
	display: inline-block;
}

input:not(:focus):invalid{
	background-color: var(--invalid-input-bg);
	border: dotted var(--invalid-input) 2px;
}